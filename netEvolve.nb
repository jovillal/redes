(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    174275,       3387]
NotebookOptionsPosition[    170687,       3324]
NotebookOutlinePosition[    171051,       3340]
CellTagsIndexPosition[    171008,       3337]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "Represent a graph as a list of it nodes, each node a list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "j"], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["n", "j1"], ",", 
       SubscriptBox["n", "j2"], ",", "\[Ellipsis]", ",", 
       SubscriptBox["n", 
        SubscriptBox["jN", "j"]]}], "}"}], ",", 
     SubscriptBox["\[Phi]", "j"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "67030fe5-8837-4380-ba64-e5fbba78098c"],
 "; with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "j"], "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalN]", "+"]}], TraditionalForm]],
  ExpressionUUID->"3de4ad31-f601-4ca9-a4f5-7f21021ff63d"],
 " an integer (the amount of marbles at node ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "ec63fd0f-6b01-44c5-be32-1d13ee4798f2"],
 "); ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["n", "j1"], ",", 
     SubscriptBox["n", "j2"], ",", "\[Ellipsis]", ",", 
     SubscriptBox["n", "jN"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "f1fbb09a-31c6-4c11-ae40-1e30e9d278f7"],
 " the list of neighbors of node ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "8d63e834-db08-4144-8bb5-d64aef8db4c0"],
 "; and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "j"], TraditionalForm]],ExpressionUUID->
  "5f2ebe79-9cf8-4191-9bf1-ace10250a59b"],
 " the phase that determines if marbles are able to leave the node or not. \
When ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "j"], "\[Equal]", "0"}], TraditionalForm]],
  ExpressionUUID->"3bd75983-ab3b-464b-a5f9-b1703ab0afd8"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"\[Omega]", " ", "t"}], "+", 
      SubscriptBox["\[Phi]", "j"]}], "]"}], "\[GreaterEqual]", " ", "0"}], 
   TraditionalForm]],ExpressionUUID->"503b63a3-0ec5-4649-a1eb-be8d879a218b"],
 " marbles can leave the node.\nGiven a network, the rules of the simulation \
are that at every tick:\n\t\[FilledSquare] Every node passes one of its \
marbles to one of its neighbors. \n\t\[FilledSquare] The marble is passed if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Phi]", "j"], "\[Or]", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "t"}], "+", 
       SubscriptBox["\[Phi]", "i"]}], "]"}], "\[GreaterEqual]", " ", "0"}]}], 
   TraditionalForm]],ExpressionUUID->"9bcf5dac-612d-4573-bdda-da9e4622555f"],
 ", otherwise the marble stays. \n\t\[FilledSquare] The marble goes to one of \
the neighbours based on the outdegree of the potential receipent (this is, if \
node\[CloseCurlyQuote]s A has a bigger outdegree than node B, it is more \
likely that the marble would go to node A). "
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3f3bnuE28xvHnt1VYJpn4j0+EN1XGCMKomsO16WB
6F8P+DNAtL9wXwGIlqoMLALRz+Li6kG0/eq/DSBaLOEd1x0gLSfmLQCi1bad
kAHRGwN45UB0fvJUZRBdP5VPFUQvvrnfG0RbccSGg2itYq8OEL1r+osJIDpL
v2s+iOY5uGYhiDZiUFgDot0knmwA0TWHhM6B6MY3b26D6Jw9996AaG1Ry7dg
fZZXGe+CxHkms4Jou/YHG2pYgPbsdNwIoq0ftu5o43vj+Js1YQ+IDmj8cmAT
kFbS+nQcRE9w+PTrPv8bxxdNJ/6D6BvunSwPgLRH32o+EA0AUDGc1w==
  
  "],ExpressionUUID->"dfe9fbd6-90b6-4a8d-9fbd-b93ab99296d2"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["graphToNet",
     FontWeight->"Bold"], "[", 
    StyleBox[
     RowBox[{"graph", ",", " ", "fun"}],
     FontSlant->"Italic"], "]"}], TraditionalForm]],ExpressionUUID->
  "35fa926f-788c-4482-be9a-f6072dc3417b"],
 " takes a graph (Mathematica style) and returns a list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["m", "1"], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["o", "11"], ",", ",", 
           SubscriptBox["o", "12"], ",", "\[Ellipsis]", ",", 
           SubscriptBox["o", 
            RowBox[{"1", 
             SubscriptBox["N", "1"]}]]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", "11"], ",", 
           SubscriptBox["n", "12"], ",", "\[Ellipsis]", ",", 
           SubscriptBox["n", 
            RowBox[{"1", 
             SubscriptBox["N", "1"]}]]}], "}"}]}], "}"}], ",", 
       SubscriptBox["\[Phi]", "1"]}], "}"}], ",", "\[Ellipsis]", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["m", "j"], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["o", 
            RowBox[{"j", " ", "1"}]], ",", 
           SubscriptBox["o", 
            RowBox[{"j", " ", "2"}]], ",", "\[Ellipsis]", ",", 
           SubscriptBox["o", 
            RowBox[{"j", " ", 
             SubscriptBox["N", "j"]}]]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", 
            RowBox[{"j", " ", "1"}]], ",", 
           SubscriptBox["n", 
            RowBox[{"j", " ", "2"}]], ",", "\[Ellipsis]", ",", 
           SubscriptBox["n", 
            RowBox[{"j", " ", 
             SubscriptBox["N", "j"]}]], ","}], "}"}]}], "}"}], ",", 
       SubscriptBox["\[Phi]", "j"]}], "}"}], ",", "\[Ellipsis]", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["m", "N"], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["o", 
            RowBox[{"N", " ", "1"}]], ",", 
           SubscriptBox["o", 
            RowBox[{"N", " ", "2"}]], ",", "\[Ellipsis]", ",", 
           SubscriptBox["o", 
            RowBox[{"N", " ", 
             SubscriptBox["N", "j"]}]]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["n", 
            RowBox[{"N", " ", "1"}]], ",", 
           SubscriptBox["n", 
            RowBox[{"N", " ", "2"}]], ",", "\[Ellipsis]", ",", 
           SubscriptBox["n", 
            RowBox[{"N", " ", 
             SubscriptBox["N", "j"]}]]}], "}"}]}], "}"}], ",", 
       SubscriptBox["\[Phi]", "N"]}], "}"}]}], "}"}], TraditionalForm]],
  ExpressionUUID->"a88265bc-87e3-4ded-970a-c56f29cc91e7"],
 "; with ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "61ec4b1b-718a-4dae-ad76-9ce6bb74a4e4"],
 " the number of nodes in the graph, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", 
    RowBox[{"j", " ", "s"}]], TraditionalForm]],ExpressionUUID->
  "3de23db5-c77f-463f-bf55-c8be05b882a4"],
 " the ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]],ExpressionUUID->
  "03f8c4f2-1b1c-443d-af1a-436c644ef701"],
 "-th neighbour of node ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "aa38d334-e7f5-4114-a5b7-f7a74c44250c"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["o", 
    RowBox[{"j", " ", "s"}]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ddb3cf48-f1cf-4fa3-9262-cd7fd2ea8fa4"],
 " its outdegree, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "j"], "\[Element]", 
    RowBox[{"[", 
     RowBox[{"1", ",", "N"}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "b9defc46-d96b-4381-82c5-6e37f2bf73c2"],
 " an integer, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "j"], TraditionalForm]],ExpressionUUID->
  "03c54259-2461-4ee2-a6d2-a9a996952c83"],
 " determined by ",
 Cell[BoxData[
  FormBox[
   StyleBox["fun",
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "8fd5b3e0-247b-4eae-942e-31b86ca578e4"],
 ". \nBy default ",
 StyleBox["fun",
  FontSlant->"Italic"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["RandomChoice",
     FontWeight->"Bold"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"9", "/", "10"}], ",", 
       RowBox[{"1", "/", "20"}], ",", 
       RowBox[{"1", "/", "20"}]}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\[Pi]", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], TraditionalForm]],
  ExpressionUUID->"48d1554c-e935-492e-8b38-8da1632834a5"]
}], "Text",
 CellChangeTimes->{{3.760447107248803*^9, 3.760447218563951*^9}, {
  3.760447277865303*^9, 3.7604475258713293`*^9}, {3.765712660419149*^9, 
  3.765712701796489*^9}, {3.765802544670927*^9, 3.765802545330171*^9}, {
  3.766419808063777*^9, 3.766419986685328*^9}, {3.766421109606082*^9, 
  3.766421242525169*^9}, {3.76642128789146*^9, 
  3.766421328884591*^9}},ExpressionUUID->"da1376ef-3dc4-48cf-8322-\
f17561cd45f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphToNet", "[", 
   RowBox[{"g_Graph", ",", 
    RowBox[{"\[Phi]_:", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"9", "/", "10"}], ",", 
           RowBox[{"1", "/", "20"}], ",", 
           RowBox[{"1", "/", "20"}]}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Pi]", ",", 
           RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "&"}], ")"}]}]}], "]"}], 
  ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nei", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "]"}], "&"}], "/@", 
        RowBox[{"Normal", "[", 
         RowBox[{"AdjacencyMatrix", "[", "g", "]"}], "]"}]}]}], ",", 
      RowBox[{"out", "=", 
       RowBox[{"DegreeCentrality", "[", 
        RowBox[{"gr", ",", "\"\<Out\>\""}], "]"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"VertexCount", "[", "g", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nei", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"out", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "\[Rule]", "#"}], "}"}], "&"}], "/@",
        "nei"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomInteger", "[", "n", "]"}], ",", "#", ",", 
         RowBox[{"\[Phi]", "[", "]"}]}], "}"}], "&"}], "/@", "nei"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7604476745548*^9, 3.7604477095307217`*^9}, {
   3.7604477504870996`*^9, 3.760447770754714*^9}, {3.760447818206962*^9, 
   3.760447818529676*^9}, {3.760447860350553*^9, 3.760447876469585*^9}, {
   3.7604479371265497`*^9, 3.760447977863716*^9}, {3.760448075531217*^9, 
   3.760448091607615*^9}, {3.760448356399078*^9, 3.760448398606248*^9}, {
   3.7604484823918533`*^9, 3.760448514652697*^9}, {3.760448747193153*^9, 
   3.760448760181095*^9}, {3.765712527989369*^9, 3.765712556524828*^9}, 
   3.765712606604196*^9, {3.76571265546773*^9, 3.765712656099231*^9}, {
   3.765712691515273*^9, 3.765712694403102*^9}, {3.766420547166832*^9, 
   3.766420599373563*^9}, {3.766421381883307*^9, 3.7664214011214457`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c44b604d-1df8-42e5-be45-7efd94616e00"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["netEvolve",
     FontWeight->"Bold"], "[", 
    StyleBox[
     RowBox[{"graph", ",", " ", "\[Omega]", ",", "T"}],
     FontSlant->"Italic"], "]"}], TraditionalForm]],ExpressionUUID->
  "ecdbd23c-6a3b-4495-a1f3-c88f2365e1e6"],
 " takes a graph (represented as previously described), with ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]],ExpressionUUID->
  "4081c62e-5926-450c-801e-990eceb3f6db"],
 " nodes, an integer ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],ExpressionUUID->
  "780abadb-b601-4a8c-91c0-b4787aef8d8e"],
 ", and a real \[Omega] and implements the rule described above for ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],ExpressionUUID->
  "8c9d12ce-06da-4ec9-9798-12eb0017a9b0"],
 " ticks. It returns an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"M", "\[Cross]", "T"}], TraditionalForm]],ExpressionUUID->
  "75e1ab5c-ee53-447f-828b-61754caa15e5"],
 " matrix where every row has the number of marbles  of its corresponding \
node for each tick. This is, element ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", 
    RowBox[{"m", ",", "t"}]], TraditionalForm]],ExpressionUUID->
  "a567856e-b3fd-41ee-9897-81d87e475fd4"],
 " is the number of marbles of node ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "f5fba9b9-0c20-4001-b7de-ae611b02e00d"],
 " at tick ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "736b9403-0846-4b68-917a-2c168fb5ea45"],
 "."
}], "Text",
 CellChangeTimes->{{3.760122220933365*^9, 3.7601222424778423`*^9}, {
  3.7601223630704412`*^9, 3.760122390940054*^9}, {3.760122451146208*^9, 
  3.7601226517920218`*^9}, {3.760187445861616*^9, 
  3.7601874701569033`*^9}},ExpressionUUID->"90471404-008a-4a87-9a11-\
2227a4cfbe2f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["netEvolveTrace",
     FontWeight->"Bold"], "[", 
    StyleBox[
     RowBox[{"graph", ",", " ", "\[Omega]", ",", "T"}],
     FontSlant->"Italic"], "]"}], TraditionalForm]],ExpressionUUID->
  "b5962094-7a0b-42a2-98ff-3d3e4fd89053"],
 " does the same as netEvolve, but it returns a list ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["s", "11"], ",", "\[Ellipsis]", ",", 
          SubscriptBox["s", "N1"]}], "}"}], ",", "\[Ellipsis]", ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["s", 
           RowBox[{"1", "T"}]], ",", "\[Ellipsis]", ",", 
          SubscriptBox["s", 
           RowBox[{"N", " ", "T"}]]}], "}"}]}], "}"}], "}"}], ",", "E"}], 
    "}"}], TraditionalForm]],ExpressionUUID->
  "7918867f-68a5-42ec-8ce3-8f26351c8b67"],
 " with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", 
    RowBox[{"n", " ", "t"}]], TraditionalForm]],ExpressionUUID->
  "6b3c0050-604b-496c-8b85-5721bcf9b342"],
 " the number of the node that received the marble from node ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "a75ff84d-fce5-4550-a4e8-491b42d607ba"],
 " at time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "dfedc6ca-eb2b-4bdd-9040-e876dcd7c98e"],
 "."
}], "Text",
 CellChangeTimes->{{3.760122220933365*^9, 3.7601222424778423`*^9}, {
  3.7601223630704412`*^9, 3.760122390940054*^9}, {3.760122451146208*^9, 
  3.7601226517920218`*^9}, {3.7601873108100767`*^9, 3.760187428725038*^9}, {
  3.760187490047587*^9, 
  3.760187614834169*^9}},ExpressionUUID->"a9db625c-f201-431c-a5fa-\
bff8fee77759"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.760195753510106*^9, 3.760195765625606*^9}, {
  3.7601958696180162`*^9, 3.760195870533347*^9}, {3.760195902552986*^9, 
  3.760195968634884*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"22044a60-023b-43f4-9c31-ea9bbe9aa0bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Omega]", " ", "t"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76019576832933*^9, 3.7601957956450243`*^9}, {
  3.760195827581086*^9, 3.760195853340678*^9}, {3.760195893171241*^9, 
  3.7601958941166687`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"46a59d6c-0725-45e8-9079-dc6f6499d1c7"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{0., 0.}, {0., 0}}, {{7., -0.35078322768961984`}, {7., 0}}, {{
        8., -0.7568024953079282}, {8., 0}}, {{9., -0.977530117665097}, {
        9., 0}}, {{10., -0.9589242746631385}, {10., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.479425538604203}, {1., 0}}, {{2., 0.8414709848078965}, {
        2., 0}}, {{3., 0.9974949866040544}, {3., 0}}, {{4., 
        0.9092974268256817}, {4., 0}}, {{5., 0.5984721441039565}, {5., 0}}, {{
        6., 0.1411200080598672}, {6., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.479425538604203}, {2., 0.8414709848078965}, {
     3., 0.9974949866040544}, {4., 0.9092974268256817}, {5., 
     0.5984721441039565}, {6., 0.1411200080598672}, {
     7., -0.35078322768961984`}, {8., -0.7568024953079282}, {
     9., -0.977530117665097}, {10., -0.9589242746631385}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 10}, {-0.977530117665097, 0.9974949866040544}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.760195837697007*^9, 3.760195942133613*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"d7817dbe-f3ca-4b97-8fb5-beab9d633c02"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.760460975613728*^9, 3.7604610042995377`*^9}, 
   3.7606330015825768`*^9},ExpressionUUID->"c006c0d9-07c4-4d34-a2c7-\
ad239ab1a182"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netEvolve", "[", 
   RowBox[{"graph_List", ",", 
    RowBox[{"\[Omega]_Real", "?", "Positive"}], ",", "T_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"output", "=", 
       RowBox[{"{", "graph", "}"}]}], ",", 
      RowBox[{"nodes", "=", 
       RowBox[{"Length", "[", "graph", "]"}]}], ",", "add", ",", "remove", 
      ",", "t", ",", "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"remove", "[", 
       RowBox[{"node", ":", 
        RowBox[{"{", 
         RowBox[{"0", ",", "neighs_", ",", "\[Phi]_"}], "}"}]}], "]"}], ":=", 
      "node"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"remove", "[", 
       RowBox[{"node", ":", 
        RowBox[{"{", 
         RowBox[{"_", ",", 
          TagBox[
           StyleBox[
            RowBox[{"List", "[", 
             RowBox[{"Rule", "[", 
              RowBox[{
               RowBox[{"List", "[", "]"}], ",", 
               RowBox[{"List", "[", "]"}]}], "]"}], "]"}],
            ShowSpecialCharacters->False,
            ShowStringCharacters->True,
            NumberMarks->True],
           FullForm], ",", "_"}], "}"}]}], "]"}], ":=", "node"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"remove", "[", 
       RowBox[{"node", ":", 
        RowBox[{"{", 
         RowBox[{"m_", ",", "neighs_", ",", "0"}], "}"}]}], "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"m", "-", "1"}], ",", "neighs", ",", "0"}], "}"}], ",", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"neighs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"remove", "[", 
       RowBox[{"node", ":", 
        RowBox[{"{", 
         RowBox[{"m_", ",", "neighs_", ",", "\[Phi]_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], "]"}], "<", "0"}],
         ",", "node", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"m", "-", "1"}], ",", "neighs", ",", "\[Phi]"}], "}"}], 
          ",", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{"neighs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"t", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"add", "=", 
      RowBox[{"remove", "/@", "graph"}]}], " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"remove", " ", "marble", " ", "at", " ", "each", " ", "node"}],
        ",", " ", 
       RowBox[{"note", " ", "where", " ", "it", " ", "goes"}]}], "*)"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"add", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_List", ",", "i_"}], "}"}], "\[Rule]", "i"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"get", " ", "the", " ", "destination", " ", "nodes"}], "*)"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"add", "=", 
      RowBox[{"add", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"node_List", ",", "i_Integer"}], "}"}], "\[Rule]", 
        "node"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"clean", " ", "the", " ", "network"}], "*)"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Count", "[", 
           RowBox[{"tmp", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"Union", "[", "tmp", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{
      "count", " ", "how", " ", "many", " ", "marbles", " ", "go", " ", "to", 
       " ", "each", " ", "node"}], "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"add", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}], "+", 
           
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}], "/@", "tmp"}]}], 
     RowBox[{"(*", 
      RowBox[{"build", " ", "rules", " ", "to", " ", "add", " ", "marbles"}], 
      "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"output", ",", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"add", ",", "tmp"}], "]"}]}], "]"}], 
     RowBox[{"(*", 
      RowBox[{"add", " ", "marbles"}], "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"t", "=", "1"}], ",", 
       RowBox[{"t", "<", "T"}], ",", 
       RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"remove", "[", 
            RowBox[{"graph", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Omega]", " ", "t"}], "+", 
             RowBox[{"graph", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "]"}]}], "}"}], "]"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"add", "=", 
         RowBox[{"remove", "/@", 
          RowBox[{"output", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "remove", " ", "marble", " ", "at", " ", "each", " ", "node"}], ",",
           " ", 
          RowBox[{"note", " ", "where", " ", "it", " ", "goes"}]}], "*)"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{"add", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_List", ",", "i_"}], "}"}], "\[Rule]", "i"}]}], "]"}]}], 
        RowBox[{"(*", 
         RowBox[{"get", " ", "the", " ", "destination", " ", "nodes"}], 
         "*)"}], ";", "\[IndentingNewLine]", 
        RowBox[{"add", "=", 
         RowBox[{"add", "/.", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"node_List", ",", "i_Integer"}], "}"}], "\[Rule]", 
           "node"}]}]}], 
        RowBox[{"(*", 
         RowBox[{"clean", " ", "the", " ", "network"}], "*)"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"Count", "[", 
              RowBox[{"tmp", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Union", "[", "tmp", "]"}]}]}], 
        RowBox[{"(*", 
         RowBox[{
         "count", " ", "how", " ", "many", " ", "marbles", " ", "go", " ", 
          "to", " ", "each", " ", "node"}], "*)"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tmp", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "}"}], "\[Rule]", 
             
             RowBox[{
              RowBox[{"add", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
              "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}], "/@", 
          "tmp"}]}], 
        RowBox[{"(*", 
         RowBox[{
         "build", " ", "rules", " ", "to", " ", "add", " ", "marbles"}], 
         "*)"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"output", ",", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"add", ",", "tmp"}], "]"}]}], "]"}], 
        RowBox[{"(*", 
         RowBox[{"add", " ", "marbles"}], "*)"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"output", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7601881800003853`*^9, 3.760188304975915*^9}, {
   3.760188349719676*^9, 3.760188393780155*^9}, {3.7601884589568653`*^9, 
   3.760188522553049*^9}, {3.760188654191463*^9, 3.760188780623063*^9}, {
   3.760188904236802*^9, 3.760188945747387*^9}, {3.760196187844468*^9, 
   3.760196288820949*^9}, 3.7604624497929487`*^9, {3.760463503904766*^9, 
   3.7604636648473454`*^9}, {3.760464116781419*^9, 3.7604642898342743`*^9}, {
   3.7604644933792458`*^9, 3.760464539394474*^9}, {3.760464881103915*^9, 
   3.7604650330069427`*^9}, {3.7604664555281897`*^9, 3.760466536867774*^9}, {
   3.760466579319934*^9, 3.760466674456068*^9}, {3.760636875303289*^9, 
   3.760637015411632*^9}, {3.7606386383555603`*^9, 3.760638641672834*^9}, {
   3.760638673760391*^9, 3.760638930924288*^9}, {3.760639116785989*^9, 
   3.760639276946638*^9}, {3.7614163447424393`*^9, 3.761416346026816*^9}, {
   3.761416426917527*^9, 3.761416546168655*^9}, {3.761416631502273*^9, 
   3.761416637059073*^9}, {3.761416684271891*^9, 3.7614166870495358`*^9}, {
   3.761416721876664*^9, 3.7614167599884157`*^9}, {3.761416861365748*^9, 
   3.761416861608581*^9}, {3.7614168974012403`*^9, 3.761416899038789*^9}, {
   3.761416955250719*^9, 3.761416955939864*^9}, {3.7614170486990757`*^9, 
   3.761417054846596*^9}, {3.7657128766216993`*^9, 3.7657129058995113`*^9}, {
   3.766422467649922*^9, 3.7664224850905533`*^9}, {3.766422591305255*^9, 
   3.766422592111266*^9}, {3.766422761055311*^9, 
   3.766422784214127*^9}},ExpressionUUID->"72749f88-ce36-447f-801c-\
a54657fd878f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{"{", 
    RowBox[{"10", ",", "15"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.760637038395648*^9, 3.7606370450610723`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"34cb5fe9-d1ae-40b4-b097-e5ff10956187"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {Null, 
       SparseArray[
       Automatic, {10, 10}, 0, {
        1, {{0, 4, 6, 6, 10, 15, 20, 24, 28, 29, 30}, {{4}, {5}, {6}, {10}, {
          6}, {7}, {1}, {5}, {6}, {7}, {1}, {4}, {6}, {7}, {8}, {1}, {2}, {
          4}, {5}, {8}, {2}, {4}, {5}, {8}, {5}, {6}, {7}, {9}, {8}, {1}}}, 
         Pattern}]}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{1.5639596463714696`, -1.941832123881341}, {
       3.19736487290945, -0.40967994514300443`}, {
       0.4096799451430046, -3.5099206250476165`}, {
       2.107443429229966, -1.354857771359751}, {
       2.6132677145064562`, -2.0191304828783174`}, {
       2.6645265726031546`, -1.4106085877489407`}, {
       3.213960027398206, -1.2753703013757562`}, {
       3.6338555815688416`, -2.0815384746308814`}, {
       4.683518277812475, -2.6905607347616076`}, {
       0.40967994514300443`, -2.3015915235729856`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         LineBox[{{1, 4}, {1, 5}, {1, 6}, {1, 10}, {2, 6}, {2, 7}, {4, 5}, {4,
           6}, {4, 7}, {5, 6}, {5, 7}, {5, 8}, {6, 8}, {7, 8}, {8, 9}}]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03872716205726767], DiskBox[2, 0.03872716205726767], 
         DiskBox[3, 0.03872716205726767], DiskBox[4, 0.03872716205726767], 
         DiskBox[5, 0.03872716205726767], DiskBox[6, 0.03872716205726767], 
         DiskBox[7, 0.03872716205726767], DiskBox[8, 0.03872716205726767], 
         DiskBox[9, 0.03872716205726767], DiskBox[10, 0.03872716205726767]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.760637046955038*^9, 3.761416371059416*^9, 3.765712916516097*^9, 
   3.7664221703601503`*^9, {3.766422512542963*^9, 3.766422516804325*^9}, {
   3.766422786164837*^9, 3.766422806260003*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"1522a150-d482-4240-a599-c493622fbe36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{"graphToNet", "[", "gr", "]"}]}]], "Input",
 CellChangeTimes->{{3.760632899612586*^9, 3.760632938676614*^9}, {
  3.7606330428424063`*^9, 3.760633044128214*^9}, {3.7606370524701033`*^9, 
  3.760637056090727*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ddb8672e-d739-4cbf-b3b1-ad74b3aae22f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "5", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "10"}], "}"}]}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "}"}], "\[Rule]", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "5", ",", "4"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "7"}], "}"}]}], "}"}], ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "5", ",", "4", ",", "4"}], "}"}], 
       "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "7", ",", "8"}], "}"}]}], "}"}],
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "4", ",", "5", ",", "4"}], "}"}], 
       "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "8"}], "}"}]}], "}"}],
      ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "4"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "8"}], "}"}]}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "4", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "9"}], "}"}]}], "}"}], ",", 
     "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "4", "}"}], "\[Rule]", 
       RowBox[{"{", "8", "}"}]}], "}"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "4", "}"}], "\[Rule]", 
       RowBox[{"{", "1", "}"}]}], "}"}], ",", "0"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.760632939259317*^9, 3.760633044774317*^9, 3.760637064712644*^9, 
   3.761416373871717*^9, {3.765712919850089*^9, 3.7657129384642773`*^9}, 
   3.766422174168867*^9, 3.766422520944446*^9, 3.766422935084524*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"a08ce268-3f12-4355-b0d3-a1289f4341eb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"marbles", "=", 
   RowBox[{"netEvolve", "[", 
    RowBox[{"test", ",", ".5", ",", "50"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7614163934416037`*^9, 3.7614164022679777`*^9}, 
   3.7614164439482594`*^9, {3.761417103234221*^9, 3.761417105702235*^9}, {
   3.76571371071523*^9, 3.765713713712064*^9}, 3.766422495344727*^9, 
   3.766422537584536*^9, {3.766422941851565*^9, 3.7664229454746637`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"a226774a-bda5-4119-b72e-f7ade97f3b81"],

Cell["\<\
Para mirar el n\[UAcute]mero de pelotas en cada nodo (ejemplo con el nodo 6):\
\
\>", "Text",
 CellChangeTimes->{{3.7614170744668837`*^9, 3.761417117431882*^9}, {
  3.7657137209199457`*^9, 3.765713721231839*^9}, {3.7664229519359922`*^9, 
  3.766422952503914*^9}},ExpressionUUID->"f1d535c0-1b36-4354-8a71-\
f006c114672d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"marbles", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761416778827652*^9, 3.7614167814919453`*^9}, {
  3.7614168758337097`*^9, 3.7614169364378233`*^9}, {3.761416970315772*^9, 
  3.761417019878908*^9}, {3.761417109198948*^9, 3.7614171245760307`*^9}, {
  3.76571296837047*^9, 3.765712969031735*^9}, {3.766422955498825*^9, 
  3.7664229559922733`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"fe7c6d34-5664-41d0-8ab6-1f3be523aca1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "5", ",", "7", ",", "8", ",", "7", ",", "8", ",", "7", ",", "7", 
   ",", "7", ",", "7", ",", "6", ",", "6", ",", "6", ",", "5", ",", "4", ",", 
   "4", ",", "3", ",", "3", ",", "3", ",", "3", ",", "4", ",", "5", ",", "6", 
   ",", "6", ",", "7", ",", "7", ",", "7", ",", "7", ",", "9", ",", "8", ",", 
   "8", ",", "7", ",", "8", ",", "7", ",", "6", ",", "6", ",", "8", ",", "8", 
   ",", "7", ",", "7", ",", "7", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "9", ",", "9", ",", "9", ",", "8", ",", "9", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{
  3.761416782004759*^9, {3.761416881703453*^9, 3.761416971149787*^9}, {
   3.76141700441325*^9, 3.761417020431004*^9}, 3.761417125125812*^9, {
   3.765712948720399*^9, 3.765712969482964*^9}, 3.7657137227851143`*^9, 
   3.7664225016011267`*^9, 3.7664229562622013`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"10687798-84ab-4691-8665-cc0ef05a9cbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"marbles", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "6"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761417127822241*^9, 3.761417137897572*^9}, {
  3.7657129765624323`*^9, 3.7657129770156612`*^9}, {3.765713793946488*^9, 
  3.765713799103649*^9}, {3.766422959474626*^9, 3.766422960000248*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"73fa5f78-4fd1-4792-a88e-763700c86a73"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdkDkKAkEQRQsjQwMDAwMdRERE1HHfpt019QiCsVeYI3sElamP9GsYHq9/
V011Nx+v+7NkZun3+7FY76xgJfiGs+osO+shPtfAOeU15HWQ+wm8BW+jbwfe
hfcwVx9zD+BDp+45gqfwMXyCflP8f4b55vCFU/ddwlfwNXzjTJxbp945g4e4
Pg/Id8jlmncfey5X/SH2XK55j+gPtxPq4XZGDreLM/EcblfkctXfkP/9A2Gi
MO4=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {0, 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.761417139070674*^9, {3.765712950353393*^9, 3.765712977252657*^9}, 
   3.7657137243075666`*^9, {3.7657137948258266`*^9, 3.765713799410027*^9}, 
   3.7664225036242447`*^9, 3.766422960449203*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"05f327c0-86d0-470c-8116-a2e82dc1fbea"]
}, Open  ]],

Cell["El 3, que est\[AAcute] solo, permanece constante", "Text",
 CellChangeTimes->{{3.765713802928268*^9, 3.765713828062818*^9}, {
  3.766422969679596*^9, 
  3.766422994327373*^9}},ExpressionUUID->"0feabede-4c87-4bc9-876d-\
6c963e80d05e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"marbles", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.765713825447267*^9, 3.765713825943172*^9}, {
  3.766422976795198*^9, 3.766422989991776*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"f41ef0ad-48c0-4047-a169-7c091c2c0c8f"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdycsKQVEYhuE/I0MDAwMDJEmS85m9nZm6BGXsFlyyS0CUPKtWX8//li+3
8zUTEb3Xf+/nPZLPVtLvIf13FudwHhdwEZewW8U1XMcN3MQt3MYd3MU93McD
PMQjPMYTPMUzPMcLvMQJTv99x7Gi41jTcWzoOLZ0HDs6jj0dx4GO40jHcaL/
/ASBczKA
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {0, 18.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.765713830397238*^9, {3.7664229721272*^9, 3.7664229902584352`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"2c798fde-e04a-47cb-a6be-eb9ae94c2575"]
}, Open  ]],

Cell["El n\[UAcute]mero total de pelotas es", "Text",
 CellChangeTimes->{{3.76571301025628*^9, 
  3.7657130230945263`*^9}},ExpressionUUID->"42f1ec25-f301-4838-aa40-\
4958141c6a8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", "marbles"}]], "Input",
 CellChangeTimes->{{3.7657130308700247`*^9, 3.7657130359998283`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"e619b74e-ce3b-4200-b98c-e4a167483179"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",",
    "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", 
   ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", 
   "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", 
   ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", 
   "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", 
   ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", "53", ",", 
   "53", ",", "53", ",", "53", ",", "53", ",", "53"}], "}"}]], "Output",
 CellChangeTimes->{3.7657130366757383`*^9, 3.765713729476161*^9, 
  3.76642299783323*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"0d514066-f8c9-4058-80e1-49c5ed30bf1e"]
}, Open  ]],

Cell["La densidad de nodos en un tick (el \[UAcute]ltimo)", "Text",
 CellChangeTimes->{{3.765713042415723*^9, 3.765713043958584*^9}, {
  3.7657130876542892`*^9, 
  3.765713113853794*^9}},ExpressionUUID->"64855dba-b70b-4494-8511-\
81d7105c2644"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"marbles", "[", 
    RowBox[{"[", 
     RowBox[{"-", "1"}], "]"}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{"marbles", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76571312767004*^9, 3.765713140333552*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"6cfa9570-b267-41c5-b909-5711e6c7a3b1"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.}, {2., 0.}, {3., 0.16981132075471697`}, {4., 
      0.41509433962264153`}, {5., 0.18867924528301888`}, {6., 
      0.16981132075471697`}, {7., 0.}, {8., 0.03773584905660377}, {9., 0.}, {
      10., 0.018867924528301886`}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {0, 0.41509433962264153`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657131410139627`*^9, 3.7657137345297832`*^9, 
  3.766423004946205*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"fa5ea6a3-ebf1-497b-a21a-787cba6d4387"]
}, Open  ]],

Cell["La densidad de nodos en el tiempo", "Text",
 CellChangeTimes->{{3.765713590026237*^9, 
  3.7657136004809017`*^9}},ExpressionUUID->"c5d73fbb-fe10-47e8-b81f-\
3e15de892c7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"marbles", "/", 
    RowBox[{"Total", "[", 
     RowBox[{"marbles", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Node\>\"", ",", "\"\<time\>\"", ",", "\[Rho]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7657136130092297`*^9, 3.7657136141059523`*^9}, {
  3.765713654553381*^9, 3.765713698064496*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"c6c7247e-b528-454d-b09d-c9a6b21aece9"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nW+MZFd55gswUDZgqj3lcdnucd+uue5pd7fb1f+r/5+u6q7ulpZVKx+y
I7EfahMRjSIkWnI+zEphdbUIZRQhbe+yRLMsCpWEREMS2FogybAx5NoGMjbE
7tgYxvmQlJIPmQ+JVLBZZyBedu9UnfetPk+9z3wZ+eFy67y/895zz3nvOc+M
/8LHfu4j78zlcl+8P5d7V07+dLfl7y/e/50Pv/n3qf/vnBP9xz//1uoXJm56
Pa/6m39/8tnmc9/2eoHoRdWfvzr9L6M/91Wvl4g+Sn43gutf9HoZ9N/xeqx6
Lvij/+3KS/f+H89BvDkXtievuh1vzvXbeQvixfuU4PqbEC+2J4L7YLyifxri
1Tgg3jyJV/Q/hHjzJF7Ui+Q+JdXDvBqF6zHePPAsqx7GFRO9q+0NOUu8BRfm
SV51O17Ui6rb8Ragv0ZVDzlEqof3L8N9sH817yDeIuSbxFuE++RVt+MtknzG
+5dUt/u3CBwi1e3+1ecmF8aLeld/P+Qv8Zbg+rzqdryoF1UP87Okut2/qEeq
2/FiO2Oid/V3wryVeEfh+rzqdryoF1UP219S3e5f1CPV7XixnbHqYX529X52
vDouQrwRiRf1oup2vBGJF6+PVLfjxXbGRO/q/y/kIPGW4fq86na8qBeJXlLd
jhf1SHU7Xmx/7ML/HeONQZd4YzJexSRe1Iuqh+0sqW7HG5P3UeweuHf5ycsQ
L7Y/JrrEO0H6dwKuz6tux4t6UXU73gmIa1R1u38nSLzYzpjoEu8keX4nSbyT
JN5J8j5CvaS6HS/qEblPWXU7XtQl3inSv1Mk3ikS7xSJdwr6paS6HS/qkep2
vNjOmOgS7wzoEi/qedXteGdIvDM+P08h3hkyf0Y9Ah3jxXbGRJd4Z0m8qOdV
t+NFvah6r7tGX4N4Z2HeNaq63b+zJF5sZ0x0ibdC8rlC4q2QeCukfysk3gqJ
t0L6F3+3rLodL+oS7xzoEi/qedXteOfgOS2q/qHKX7+89Wvfh3jnYB47qrod
7xxZD2I7Y6JLvPMkXtTzqtvxzvv2fw/inSfxzpN450m88/CeKqtux4u6xLtA
8hn1vOp2vAsk3gUS7wKJdwHyPILrn4N4F0i8qEu8iyTeRbg+r7od76Jb+8JE
6WMfeRXiXSTxLpJ4F0m8iyRebGdMdIl3icS7ROJdIvEuwXunqHr//q9DvEtk
vFoCDpHqYZ6X4T44f8b2S7zLoEu8yySfl0m8yyTeZRLvMnn/LpN48fqy6mHz
Y6JLvCskXtTzqtvxrpB4V0g+r5D51QrMbyPV7XixnTHRJd4qyWfU86rb8VZJ
vFUSb5XEi78bgf5ViLdK4kVd4l0FXeJFPa+6He8q5G0Rrn8D4l0l60H83Uj1
MM/L5PqY6BLvGugSL+p51e1416Afi0QvqW7Hi78bqW7Hi9fHRJd410GXeFHP
q27Huw79WFTdHq/WSbzrJJ/X4bkuq27Hi7rEu0Hi3SDP7waJd4PEu0Hi3SDx
4u9GRC+rbseLusS7SeJFPa+6He8myWfUS+Q+o6rb8WJ7ykSPiS7xbpH6xhaJ
d4vEu0Xi3SL9uwXz/1HVw9+N4HrsX7w+JrrEu03i3SbxbpN4t0m8qJdUt+PF
342IXiZ6THSJ15F4HVyfV92O15H3kSPvI0eeX/zdSHW7f/H6mOg+3gTv4+NN
SLwJiTch8SYkXr0e+nfodyO4HuIduj4muvTvDujSv6jnVbf7d4eMz6iXVLf7
F383InpZdXu9gNdL/5J4h/S86nb/kngz3Xx+M92cTw79bgTXw3xj6PqY6NK/
NTJ/rtnxZrrdvzXSvzUyPtfI/BnbE4GO8w1sZ0x06V/UpX9Rz6tu9y+JN9PN
el1SI88v/m6kut2/eH1MdOnfOujSv6jnVbf7t076t07qz3XyPqqT/q2T+TO2
Mya69C/eX/qXxJuQeDP9I5+v//J//NEPoH9JvKrDeDX0u5Hqdv+SeId06d9d
8vzu2vFmut2/u3a8mW737y4Zn7E9Eej4/GI7Y6JL/5J4h/S86nb/7vr6w23o
XxJvQuJNsJ2R6vb7l8Q7pEv/7oEu/Yt6XnW7f/fseDPd/r6wR57fPdK/2J4y
0WOiS//i/aV/SbwJiTch8Wa63b8k3qH2RKqb8Q7pMdGlfxvk+UU9r7rdvw3y
/DbI89sg/duAdkZwPc6f8fqY6NK/JN4Er8+rbvdvg/RvA+rwJdXt/m3AuBSp
HranTPSY6NK/+6BL/6KeV93u333y/O7b8Q7dZ1R1+/lFvUzaGRNd+pfEm+D9
86rb/bvv/sODvcyF/t2H70olcp9R1e3nF9tZJnpMdOnfAzveIT2vut2/B3a8
mW7GO3SfUdXt/kW9TNoZE136F+8j/UviTUi8CYk3IfHq7+Lzi78bwfUw3xi6
Pia69O8hGZ8P7Xgz3e7fQ9K/h2S/Ct5nVHUzXm0nzq/w+pjo0r+oS/+SeBMS
byJx/RX076G9H2noPqOqh78bqW73L4k3wX78ybbE/W/7Pwx6zs1kV5/71J/4
/36Hk+v7cf0vz+vdqvcvfwGuz7nea/nn/xiuz7nde/Jbz/vrH9D7BBySB21d
r5f7fweuz7kL95rzlT/3+ojeJxNfHV/yv5ueU71flvgaXJ9zb5+NS6/PuXO9
G/2Rb895vU/4neu8Xv9Xvfb7693gXEPv9fV5f33ymOqts9z0+px7476/+9I/
PHsTrs+50/F7A8ef+nYOzkf847MHH6r8te+v3JjqH+tNmJ6H63PuV+5d/vI3
4fqcnyd7Dq1I73PnXlif+Ya/z7jq+V6e/D5cn3M9POeeg+tzbrF3/9/u652y
3qff758BXc5ZfBLyNu+CftQ8zPv2fwXyMO+CfNC8gvMLmleoj6h+r1cOPpRC
nojehnzIh99/tX/z7mavOSn0bz7sF+0v+F3tr7zPt28D/7zrdctnU+Cfd91e
e64DZzw3IZxlXG8D54L7jY/fG+j/ADgX3Pd7eZsC5wLhjPqI6jbnAuFccMF4
pZwL/nl5ETgXXG/YeBWfC9CVc8HXM78FnAt+XvpnwLng0rPjtnIukHwu+vHt
94BzMRz/lXMx/F3lXCTjZJGMk0Uy7hXJuFcknIvu3sP78QefB85FV+oNQC8A
56LrvRZWvwWci+6XegF8BzgXST4XST7jORHhXPLzk/8GnOXcx2eAc8l9Nxtl
7vu7bwDnEsln1EdU7w1X970InPH+51UP6jDKGc6VKGfQlXOJcC4RziXCuUQ4
4/kU4SznQU6A8yjhPEo4jxLOqI+o3n8vfAs4j7recHv1ReA8Gr7vlDOcZ1HO
oCvnUXepl+gvAOdR1zr7PCrnUcJ5lHCW301g3IgI54hwjgjniHBGfUR1m3NE
OEeEc0TGjYiMGxHJ54jkc0Q4R4QznscRzmXgL5zLhHOZcC4TzqiP2LpyxvM7
51UPxgHlXCb5XCb5XCb5XCb5XPbj6vPAuez+VS9RvgCcy+Q9GIMunGPyHozJ
ezAmnFEfUb2XVl/4DnCWdeQt4By7f312PqCcYzKvi8m8Dq5XzrFfl/05cI7D
flHOsevPwz8LnPH8kXCeIPk8QfJ5guTzBOGM+ojqNmc5N4ScJ9wLZj5PuHf3
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
tetIya5dR8r0/nj7PcjnXb9/4w3I5133z6v3boTzDeGJ+Uw4Z7qdz7skn3fJ
/HmXzJ93yfx5l8yfCechvwjJ5z2Sz3skn/dszpluctb74Px5z/3n3gZ9eA9m
ul2v2yPj8x4Zn/dIHWmP1JGAj+Yz6JrPyFPyeY+Mz4RzQjgnhHNCOGe6nc97
JJ/37PdgQjgnhHNCOCeEM/p4aD4TzkO+H5LP6IMh+dwg9ecGqT83yPjcIONz
g4zPDTI+N8h8o0HqSA1SR2qQ+kaD1DcapL7RIPUN9N+QfG6QfG6QfG6QfG6Q
fG6QfJa4cL7R8HUP2Jeb6fb43AjP+2g+N3zdD/Z9qf/J5yGfGz6fPwH5DNw0
n0HXfCach/xAJJ/3yfi8T8bnfTI+75Pxed/mnOkm50y383mf1Pn3SZ0ffUXG
bF3zeZ/k8z7JZ+Qp+bxvf7dSnxOcb+yT+Qb4qGg+77tP9AoxP4B83vfjA47P
+34/7SuQz/sknwnnhHDW9uP4vE/GZ+Cm+Qy65jPhPOR/Ivl8QPL5gOTzgc05
003OmW5yznSTs/rG4Pz5gOTzAcln9HUZs3XN5wOSzwckn5Gn5PMBGZ8J54Rw
Rt8YzWfCOSGcE8I5039s7a/LdLu+cUDqG6L/KuSz6J+DfD6w1ynJgb1OGfKx
kXw+JOvBQ5LPhySfD0k+H5J8PiT1ukP373vfDb8H+Xxoc870HoUm5vMh2cd4
aHNWHTirDw+uBw/JehB9ZiSfUZd8JpwTwjnTw/23D6ref73/EPL50J+7wXw+
9PvAX4J8PrTPASWEc0I4J4RzQjgnhHNCOCeYtz/Rv/vnbr4O+fxj4s/zL+DP
I/n8T9v2+ZT/u22fT3mL+Of8v9A/R/P57rbte/Ojbfsc0E+37XNA/5v42Ly9
bZ+b+D/bts/Mz7Ztn5l/Dn1mNJ/vI34y77B9jbK/bV+jd9rnrZL3kPNW7wIf
Esnn94b7M5Xzfbb/RsL8gt5t+wUl7yDnrd5jn7dK3knOp7zXPp+SvIt8t3p/
6M+jnO+3fXuSDxDfngcI5wcJ5/fZfjLJB4mfzPsJ5zw5R/8B+xx9cn9Yd1LO
D/p6OJy3Sh4g5+g/aJ+jT97n/3f54zm7h8J9pzo+E9+e9CHi2zNin2tz5+xz
bdnf5riR/W2PGw/Z/kiuYPucJA/ZPidpgfgVnLP9CtyIfa4tOWefa0tH7Hx2
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
dYl3SC+68D4vhvFmenBuVOLN9OC8hsSb6UFeSbxD7Y9VD767Sbxp7PeNXwv7
N9PDfMvr9Wa8Q3pR9bCdJdX7/w3xZnpwTlnizfRgniPxpnjuNSa69O806NK/
075fPgH9O036dxriKqoeztNKqgf757V/UY9Ut/sX2x8T3cfbwnM6Pt5MN/u3
VbHjbcH5Jom3JeeSXg/jzfRwP/Co6oF/i8Sb6eF5/zJpf0x0yeeFcHzTfMZ/
fzmv19v5vODz8BXI5wXYB1JSPXg/aj4vhPNAzWe5/jnIZzwfERPdx9tZDucn
Em8H90vn9Xoz3kzvjz+nYbyZHrzvJF7VnwvjzfQPnfVbkHgzPez3supmvEO6
jzfaBN3HG8l+pGfD/tV9WRBvhP/eWVF1M95M7+83/nYYb6aH75dI9eeDfimT
9sdEl3jx+7vE68J5rMbrSLzyff91iFeufwPidfDeGVU9bE+kevh8lcn1MdF9
vG38PuvjbeN34bxeb8bbxn/Hp6h6eB6w5ML7Qz4P/W6kelC3l3iH2h8T3cfr
8HuHjzfTzfeRq9vxZnr/e/EPwnhdHZ7rkurBPF/iHfrdSPVwfCuT9sdE9/Ge
7gJPH++QntfrzXgzvT+e3A7jzfTw/HJJ9aC+J/Fmejj/iUg7y6qb8Q7pPt5m
w34fNdHnPK/Xm/Fm+gd7HfnDMF6tN0L/6v1h/txshOsFiXeonWW4P8Q7pPt4
u/v2+wjrFRJvd9+Otyv1ljfDeLtQ55F4h+4zqnrIOVI9HLfLqpvxDuniy4Pz
rp/a86vErwczPfRHuqh6eJ+3dd4S1N9y73Gih+uFR1QP62OPqx76JV5UPfzd
n5H5w3ud6GFefVD1H52ttyePqB68R5LHVf+ls+eYkjHQ5Tz7RdXD9nh9aJz5
qT2eCP9Mv3n2nJfwH3p+39bn1OTfbNj8Mz3wpxL+en075D/0HP2MPC+ev+Yz
8M/0/nr8hyH/TA98eIR/F+urY6B/OuQ/1J4f+/9fITzfl7vfiR6sx5NBHSCY
5yeDOkDIZ1AHCOJNBnWAwAfPDeoAQd3AleH+8rz/k//7AoyH73Siv3l2f05u
RPVzZ/1Acg+rHvpoPap6OI+6oPrbZ69PBuv6sP5WduH/T/685fsH17nvcqKH
6473qR76rjyseuAPmTyqeuhzdUH1vznLOR2s00O/jrLqYTvv+nbhuvs+J/qb
QV69X/XAfyP3kOrhe+Ex1cP19ROqB/48uXHVw3WKrx9m4/OrZ/fX5T6gejCe
JA+pHnznTZ5QPeDjxlX/22C97OuQuk6UuM6p3s9z2ec2Dtf7fE7E12XZ14Fl
3uuf36F1h39+Mz30Kxismz58dn2UDNZNwTnuZLBuCp7HZLBuCsYZN1g3Bc2R
53eonf75jZz9/Oq6Bp7fyIX70+T5zfTgPIg8v5HsbxffiQuqB+vNZLAOCups
8vwOrXf88zu0LvDPb6aH9ZP3qd73aZF69cOq9/0K5Jzyo6qHftoXVA/amQ7W
Nctn673y/A610z+/Q+9f//zqOgWe30y/EaxHHlI9XJ8+BrqMY0+o/kJQjx1X
/WKQD/751fmArO8+oHqYtw+pHtQB5PnFeYI8v5k+HqwX/PObvd+D7zLy/Dbl
u7aMD+OqB/NweX6z9+8T/Ree5z54P7561idW/bEvhN9B3KDOHPidpoM6c7g+
8vfR8V/qDA+obvoUab0X/A8zPajbtwbvi9CvT9o/HbZffWKnwedqRHX73xeD
8T8d1F37zwv48+Smw/FZfeBxnv8Te54v7W9V7Pa30D9qRPXg+c0N1gtBvG5Q
Xw3mS+mgvhr4PrUG9dUPn63XSVxD6w4fV0p8bzL9/rPfleT7WqYHPDVP0Pdm
RHV73zXxsUmJj01KfGxS8LFpDequgV+N+u4SX5qhdYfnoPXM6yGHTO/vV/xm
yKFDfDw6xMejAz4ewifT++cpIM8z3dz/31m2vydmet+3SupXg/VX0eLWAb8O
9VsDPm7w3g/r+XKu0NnjUqaHfvuDemN4jszfp71jP19tOOfiBvW94BxKOgr3
+WQYb6aH7xfx5avbv+tw//aI6kG90Q3qb+Y4nOn9efh/DdvjYB+18B96//q8
Hapf+far/rmw/ae4X3dE9WBfbm6wju6PM7DvKNM/HvgwD+pswXjSInU2iWto
Pe7japL9b5lujkuZbo5LTdz/NqL69tn9nBJvpgf/Xowb1NnMfYNNsm+wCfv0
WoP6W1BnEA5D9QHPYWg97jlkujkuZbo5LmE9TcalLtk31YV9U8KnS/ZHdcn+
qC7ZHzVUryN1idagjhecrxFuQ3zk3xMp+O96Xw75ZLr571kM1TEeJPqI6uH6
95zqwftazzUXQv9A9Z8vhHWAdNTW1T+zEPrhtwb1kND3e1x189+70f0bcA5R
9yechNwyPdhXo/9OEPr5D+onpm9/ptu+/VgPeUz1sK4yprrp85wjPvyZbvqI
al3ooyEH3RfxUZj/xGHdVTjgPFn/nQKph4APdqb/bu/FD//uQ6abPsCZHviH
qz9qbPtXD9VhpH/BV1n7d5r0L/gkaz9O++fiFegvrMOMqR74GKeDOkzXGsda
Fbs9md6fT4IPdqb3fSBfD38308N/R2NQhwn8TpNBHab//fcvoB/BjzEd1GEC
/8N0UIcJ9qurD/Cmj9v/kXgj4h8SEf+QiPiHYN1G2jP0vfu86mE94TG4/1dg
nrbpn9P/EnLO9OD93iJ1HuGGuuTtUP1HuDl7XIqcnScR8UmIyPn9iJzfz/Rg
f4jyAT8E5UB8DyLiexAR34OhOpLngPUZ9evYsTm04dy3xJvppr9oG853S7xD
38HHVA/rSOOqm+f+hupL8u/LwPxW4nJ1O65M/9uz/nsSl4Pzp8mgvhTuPxxT
PTg3mg7qS0H7k0F9yRz/T+G8m7Qn0/vPy2vh757CObJ03NaTQX0pyM90UF/q
P9en4X2acN4kHdSXZD/2/wf7BcC1
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
I5zK+kY8Hqe2ftVyVjG12ZV4Ik5jfSyehjNaf4gXe8ppbKJdfBrTXHcx5SVp
d1niNbZOialPWEr5Qk/5rg2cXyzQdWzsTsNYsMxycHgBxxzWJ3D+SJzMnjVu
gf+yGAEXtvm0/V6OyynPY30v5XNi+tw1eBHOaf05XuHuzzbrT9z92YGX4FzW
/+PZMeVeVuE2+B+LXyKq22tc2+ng2sVANy4cc2NHJVeHrZ5Yf3XS9c9v2Bjo
6vNc119Z33vexbz3XOxseYBHLj9QN16xs+UEGuIo55fnd74WrzmJzWXeilcO
wfqBVa4N2jj4g+snp7kxzsasaq6ONXFt9mvX5/Rz/dVHrt3NdHV7khvXFrg2
tcS1691ubDrp2s4dN6794PqNi248srnuddfGr7h+8q7LJ/zDd26H/7WYETfA
f1j+BD+JKY54zu6nzV3iNferYHOXeM3fnnFOc5zE+l78qo1xvPcxboQDytOH
yl/8yPke36EN5Wkoz0R51MZpG6NC5VaO4D84vs85Mc7JSHmCPVebI1NeivIT
XH8LLmb3H79m86d4zRVPunzILcsP896fLP9I+VGX67hK+VZc3H4LPu7yJNfx
7piucxKvczmcPXiDy8/sw1+79nsQn3W5o19wB/yfxc6Wk+f7tqY8Fd//X8pb
4Bfs+eLQni/n9MGBjS+4K06wPh8Pxc9bfbC6hCNWl/BgnBhPwp1xvI0XuBl+
YvkW/D5+hDvjJvhPi+vxQJyI8yfgKtyLBvGKKXpR7ts4QvltlyP6G1+JKff1
B34Q0/mRaNz/EyktcXJ8yeWLfuecevgh/90eX48pJ/YnvunyV3/hX2PKm/1n
c4yYcl+78H1cH8fbvCimPNtvlJ92uaw7EcUBlu+64frSV6wO46Qu55OFviuZ
yx1lw297ig0b4+ddniEzvhMoF7nU6punuLsA5SldXiinxfgut5Aahy63kA6n
dvmi3Dity+28nKD49KndK77/KE9rQ9MoH+NpbWgGHuQpvzoRD3E5oskW+wfK
B31hsRLHlpR/SvndQHnSZRz7c2xK+ceUJwSyxYAfelpnmUX5O7i8zYvwx57W
MuZYHobv9n6cYoQJntaw5iVo3vvY+iurn1HlTKKU5/CUxyiBc+FcNmezccHl
mt7E2TzlMYrjV1w+qop9Z66ZOU4x1D2cLU7xS0FPub7ynHMjUG5upsWYLmf1
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
+j/LS5Tl/P8BvL+VpA==
           "]], Polygon3DBox[CompressedData["
1:eJw1nXngVdPXxve959x7zkVJSURUhoQIUWmW5kxFlKRJAxoUSiShUpIoicqQ
ROZZ5kiZ53keypSZfmX2Pp/vs98/Vt+9z97n3HP2uNaznrVrMHhMr9HFEEL7
cgip/h6nv30kfZMQ+km6SDpLmunaQZIaeQhTVe+JUgj/U/oiyXrlj1GdbSsh
vK6HXar8hZInVaeWrnXQfYeWXX646n2msg2S7rp2vPJfK/2xpHPMf6P0r5Jj
lW+vfDtJE6X3RfR7H6qsk9Lb6Xlv6/fekjyt31otaam6b6j8I8nBqnOk5AjJ
0breS9JJcpjkAF07UNJV0kXSXdd6SNpK2kj21rV9ym6Db/Ws32LbVNNvHqK/
rSTVlR6g8hO5V/mekv6Jv22jpK/yJyn/ndKfSw4vuz75/0lOUH4vfc+7Srel
bfW841T+lfI/06a6to2utSu7f2oqfb7qfxr8rlspv6Wkhcpalp1vpPI3Vd5c
+S2U31r1qkv+Vtv8I+mauP1ej+1zoeqvC24bnj9Mf39S/sv4+4OUH5i4DWnL
bkp/EtxH9NcQ5QdLjqKNGTuJ7+UZvct+T96XNuwa2+cESbey+586vSTHJr6X
Nju+7DrU7ZC4fV6W7Kfrb6qv35Cs0rc8JZmaezwxruiPavr7gPK3Sf5S+cnK
D038G/xWR6UPlTRVen/JYVwre4wz1hnHjOcfg78H4dt6x7Iv9NufS17Vs1+T
vKf05ao7Q7JW+W+V/0byjtLvSjrq/boX1OZ6xly939cqWxR8z9sq/0r5LyVv
Kv2W5DulN0jeU/p9SQfd31X3v6f7L9X9n/L+yveUfKRr61V3neR11X1D8rnK
O6rscMknzDvd303pD5S+TPe/qvKDlW8veUnXtlR+C8nvuvcPySql9ym4zuMq
ryifSzapbLPkFaUPUlk7yYusGconkl9U9qtkjn7jI+U/Tvx7mf6WJRtZL0q+
5wXJy4mftZXkPrXFCsmfKv9B3/K95AOlPyz5Gz6WfJb429roew7Tb7+uaxfr
+R/q2geS55R/XvIaY0T5txKXv6+/70nW6vqzkra6v5Puf1PpWRW/J+/LO/Fu
7VTeWeVvKX2Jymeyxqj8ncT1f9S7Xad3vZI1hvdL3BYHxfYcqfyIxGso68W6
xO97hOQz1qzc/b9e9/6p9CG5+/NllU3X82spfxXroco3Kd06d3++qvIZKm+v
fBfl31F+tvLDafvgNZT18iG934OSZbr/JklJ5Xep7CbWMOUfU51HJU/o+pNR
9o7vT9kTuvdxyW2qe7tkNuNDZdtKZqr8MZU9KlmhslslzVT+qp79fvB8ekRl
k5UeL7lF5ZeovKJ7a0kuVvnTkqckz+j6Gsmzkv1V1kryjK4/rPtXSpbr3ptL
XpdYn34IXn8+UNn7kmdV9pzk06L74hLWCPpD+Y8lLyr9kuTIxGsvay7r80cq
+1DyvMpeKPkaa/cRiet+VnT7s4e9ovKjmPNKfx/X73eZ25JnVLaGd2Av0bu3
lqxR+SqVPSm5Q2V3lvxNqyVr47cGyX8q/0FlP7KGKb+v7m0heUL1/i167bqB
31R53dzj7Tul/1W6qPoF1mjlf5Y8qnRj3XugZCXtTxvST7r+eJS9VNas4DLq
PES9xPeyp7O3N1e6hWS1ZD/VbSlZFecUc+tFXX9JMkeypcpqSy5hLif+7TYF
zy/WdNb2nonXZO7ht9sW/KynitYfJkjuKvke5ubziZ/Fbz7JOInvwhhpqnsP
KXjssB+jm3SJe/dqtckuKrtD16ZW/A3sbexxfNvlKv+AsSXlpp3K20ruyUK4
N3P+AV2/X7JU+Rsly5W+STJP6fmSd3T/eN2/l65do/pjlX9d+QdU1kH5ucq/
z7upvI3yh0oeVNlDko5Kz1P5x3x76vzbyp+o/JbKX638Mv29UXK56l8hOUXl
D6n8MqUPUflA5a9WfrDy+6FfKd9X+VT3XKn83fr7ovJPSa5VnVuUv5kypRdI
7lP6Xsn1St8guU3pWyULlb5aco/SL+ve1ZLrlF+aOv2wZK7yK5R/lr1AcpXy
a/X7zZV+LfF61Vpyl67fnfn7H1L9ByXLlL9JMkHpsyRDlT5Zcq7SK/gtySnK
n0l7K71IMkT5i5WfITlT6bMkZys9UTJM6eGSS/T7j6rulbp2gH7vHP2dJBmh
spGSS1X+pMoX61pz9Bnl72PtUdlByo/K/b13Kt9K+emqN00yXvkzJBcqfYfK
b5Scrvwjyj9Mm9K2kieVfrvgNr9D+ZWpxwNttFz5i5S/q+BvGqf8Y8o/yjcr
favkfKWnSEYpPVryhNKPS25T+nbJBUpPlYxReqzkPKUnS05V+jTJwexJ+jsr
8/fdpbI7JYuVXyJ5Pvda+m7i/WuoyoZIjlZZL8lgpQdJjlT6KElf1b9c9Y9R
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
gs9B/z+cO1Mh
           "]], Polygon3DBox[CompressedData["
1:eJwt1ndwVlUexvFLEPK+joiISxEbuCghRFoQEYi0KO7uyIzjCoLIJqAgIAgo
uru6q9JLqEpRSgALrJUSEkgIWMAOioCABRCUzopldAV1P2fu/eOZd55vnt/v
d869596bhoXDbx2WEUVRMVWjN1NR9J/qUVRRNYqyqkTRtfwHtAc7jnXHOvPv
0U5sN7aHpqajaAzWCesamF7N+HdoO3YI66a2I/8GLcdexF6ix9S+hb2EVfJN
5dryD9EXFrXfAufpdyH/Pn0qt1fuMypSuxFbhpXwjdW24sdTm8wouu6cKHoE
68k/Ru3kOsjt1K8Jv5h6mtHbjD50u36bsOfkSuWuUtuaL6Y+cvfJ/EntT3qX
Yl9hX2Pf0Ei1o7FK7HX+Cbla/BQaIz/eWlbqN4AvoS/lDsh9RfernY2Vyq2X
+0RuJP8krcMqsB3YKH4C3Yb1xGZhvfinqZV+3fTqGtbD/5POs4+a9lFqLZfx
/6BzsRrYWuwS/u90XO2pjPgcNOBn0iozSsz4yIzh/FjqojZf7V65HH4GvSa3
Wm6b3DB+DmXp116/LLnj/v4sVog9gN2CncEOhr34na92HuW6BmXYYbljcsdp
FPYoVtvcOuaWq20UrgkdlTshc5IeSMfXoCWWy7ehHtgjWC21F6ldr7Yh/zAd
kjssswCry6+l/dhB7BCNUFuETba+ImsrsbdB/G5qiuVg19ACubexbWYcMGM/
1cP+hdXDGvCVZjTmV1O5GR/q/wF9z68IM7AF/L1yGfyLNA0rxhaH/fFLqC82
nP+z3M/J9Rvvd5J1TKYX0vF57iU3OPSjw/xS6oeNCOeMjoTzTQOw0eE66XdW
n2VYATYqnGU6Gq4TFfnbDP1n0nIzlof7Jjc/PJfhPvErwzXE3uHfptPhXNAa
bAu/mb4Nz0s4R/pN0GsiPa/fXqwF1oXvTFdie7Ac7AY+jxql42ufjXXkO1BD
7NUw24w1+pfQYOyz8CzIdZPpSn/ENmAd3Y8e7sctVBN7OZxztcvU3ecaVE/F
/VZhb2Fv0n/558Pziz3F3y33u96vhP1hb2BjsHR4f4XnAVuKLaFT4V1KU7FF
/EI6wb9A47C5/Bw6FmaGM429z79H34VrRxuwbfxW+iEV762l+bn21YYWp+O5
0+VmycymgcmZ3Gq/H9vrdpqQXOfmalupa02LsM+x1ti1fFsqxr4Os7Et/Gbq
lI7PZJEZM/SfSfek471Nwabx08O1wT7BzlGbqS5Fc5N72Qxrzreghcn96GB9
N1hbJ3oY+xRrIpct04yeSdaXi93I51NjbDuWgVXjq9Oc5EyOt5ZJ1jGZCrEK
rK4ZWfo3oRS2Hjsfu4K/nDKwcuwCrBHfkKqm4/fzPv1Oh3NLPyXvnGPYWf4M
/Zq8Nw5g34d7Rj+n4u/CQezHcM/of+H9QGfM+E3/32mWGTuw6vaRtodzwzsQ
+wj7VS7iq9Ds5J14RL9fQi86m5yhsdgEfiIVyO3CrtavnbpHva96pOJrmoW1
x66nK+R2YinsYn6g3F9S8Xd1t7nHrO0oXSw3DsvHuvOfW1Jz/sNwBrGT2M1q
u4RzRr9g5+nXD8vnF9Ht1jfI2m5S+6N5H2NV/NaW6y/XPRXv9ze1F2A16RJz
N2OvYJvMyJa7jn+XdmDfYPlYXvLMlJlRbkZFeIbT8XU+K3e+XjWoAbYlrBvb
p7az2vb8U1RhLRtldmEP8k9Qnlxnud3WnM0vpLZm3Kx/S+y7zPj5WO13rdpS
WmHGv0NO7fVqd8hdxU+kPnJ3hTNqRl9+bngW9MvTL1vuhL/Pwkr8lsltlxvB
z6Nr5DrJNZM7mbyf/4b1xwbQnebOD+9OrAufI3cqM/7fbJe1HLGWw1RfbgHW
Ru4muRZypzPj78JdWEF4XsL/P3LPhPcBls83l/s2M/4GTPNbHN431C55jmqE
+6Z/LXoQm4w9LjdW5jX7KAzPRlgz1h8bQM+l429FiRllZqyjockzWFO/C/Wq
TaOxfVhvtUPVDaGm2Jfh+4YN5u+lrHT8nVmt31q9SmkItj/sTa5AppCexb4I
ZxIbFM49NUmewUysPl+PLk/Hay7ARvEjw3cemxbeseFe8WX2NiQVz+iHjcDu
p5x0/I1fby0brKOShiXvxGpydWXq0GXY6+EZtt919nq1frn8JCqUu1vmaawg
Ff+vvEKuPPz/QnXT8Td0nNzccK7Cuzy5Lj2x3nwfWpq8/+qorR+eZ3oImx6e
LbmVMlvNGJqKr8tfsV7YHbRErhIrVrtK3ZVyLVPxe7eq3B9kLqJL5aaGc45N
4dfIDUy+WxWuwUb730TDk3t5h9ydcn1pGfY41t6MPDN2OWtZ/P8B14S3Ow==

           "]]}],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0j1IlVEAx+Hj9TPFLFRSwqQiTEjCgiJKUCKFJCopIgUjLTBChUQosEWh
loJcFHQpqCWhEAp0KciloBaDWgpqKUj8Ss2Pm9VzoOHhd/6+96hc3u0tnQ0d
KSGEUf46xHMOhZQylRlCue6niiW7Tk/TFO/Yl7WTG2zICqFP7zJIvv1AR3hO
if1S3/CeMvuzfmeeJOn+iTyKqfR8p1ZwkMN2jdZzlmP2Bb1CFyftm3qbfs7b
w/qIp7Ta4zrBO9rtj/qVKZaYTgvhl87oLMvOczrPivNPXWDVeVHX4r14h6Tz
cvwcv51X43PWnZP6J97hB1/o9vc/6FtecdUe0yc85KI9pPe4xTm7R6/Rxgm7
Wc9wnKN2tR5gD4fsHVrERtJY8x3P8Y29nn/SSV6zy36hz3jMVvu+DnCHzXav
XqeDTPuSNnKKde9DrR5hHwv2bt1GAdnxdya8J1qkW8iKzzQfHw+bNI8M51xN
j/fiHXyFISP+jFTnhKaQ+P/+/gPa3Fni
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2027, 2198, 2376, 2026, 1322, 2377, 2028, 2199, 2378, 2379, 
        2029, 2200, 2380, 2381, 2030, 2201, 2382, 2031, 2278, 2202, 2383, 
        2032, 2203, 2384, 2385, 2033, 2204, 2386, 2387, 2034, 2205, 2388, 
        2035}], Line3DBox[{2037, 2206, 2389, 2036, 2279, 2207, 2390, 2038, 
        1369, 2391, 2039, 2208, 2392, 2393, 2040, 2209, 2394, 2041, 2280, 
        2210, 2395, 2042, 2281, 2211, 2396, 2043, 2212, 2397, 2398, 2044, 
        2213, 2399, 2045}], 
       Line3DBox[{2047, 2214, 2400, 2046, 2282, 2215, 2401, 2048, 2283, 2216, 
        2402, 2049, 1416, 2403, 2050, 2217, 2404, 2051, 2284, 2218, 2405, 
        2052, 2285, 2219, 2406, 2053, 2286, 2220, 2407, 2054, 2221, 2408, 
        2055}], Line3DBox[{2057, 2222, 2409, 2056, 2287, 2223, 2410, 2058, 
        2288, 2224, 2411, 2059, 2289, 2225, 2412, 2060, 1463, 2061, 2290, 
        2226, 2413, 2062, 2291, 2227, 2414, 2063, 2292, 2228, 2415, 2064, 
        2293, 2166, 2065}], 
       Line3DBox[{2067, 2294, 2167, 2066, 2295, 2229, 2416, 2068, 2296, 2230, 
        2417, 2069, 2297, 2231, 2418, 2070, 2298, 2168, 2071, 2299, 1510, 
        2072, 2300, 2232, 2419, 2073, 2301, 2233, 2420, 2074, 2302, 2169, 
        2075}], Line3DBox[{2077, 2303, 2170, 2076, 2304, 2305, 2171, 2078, 
        2306, 2234, 2421, 2079, 2307, 2235, 2422, 2080, 2308, 2172, 2081, 
        2309, 2310, 2173, 2082, 2311, 1557, 2083, 2312, 2236, 2423, 2084, 
        2313, 2174, 2085}], 
       Line3DBox[{2087, 2314, 2175, 2086, 2315, 2316, 2176, 2088, 2317, 2318, 
        2177, 2089, 2319, 2237, 2424, 2090, 2320, 2178, 2091, 2321, 2322, 
        2179, 2092, 2323, 2324, 2180, 2093, 2325, 1604, 2094, 2326, 2181, 
        2095}], Line3DBox[{251, 886, 252, 887, 888, 253, 889, 890, 254, 891, 
        892, 255, 893, 256, 894, 895, 257, 896, 897, 258, 898, 899, 259, 900, 
        260}], Line3DBox[{2097, 2238, 2425, 2096, 1697, 2426, 2098, 2239, 
        2427, 2428, 2099, 2240, 2429, 2430, 2100, 2241, 2431, 2101, 2327, 
        2242, 2432, 2102, 2243, 2433, 2434, 2103, 2244, 2435, 2436, 2104, 
        2245, 2437, 2105}], 
       Line3DBox[{2107, 2246, 2438, 2106, 2328, 2247, 2439, 2108, 1744, 2440, 
        2109, 2248, 2441, 2442, 2110, 2249, 2443, 2111, 2329, 2250, 2444, 
        2112, 2330, 2251, 2445, 2113, 2252, 2446, 2447, 2114, 2253, 2448, 
        2115}], Line3DBox[{2117, 2254, 2449, 2116, 2331, 2255, 2450, 2118, 
        2332, 2256, 2451, 2119, 1791, 2452, 2120, 2257, 2453, 2121, 2333, 
        2258, 2454, 2122, 2334, 2259, 2455, 2123, 2335, 2260, 2456, 2124, 
        2261, 2457, 2125}], 
       Line3DBox[{2127, 2262, 2458, 2126, 2336, 2263, 2459, 2128, 2337, 2264, 
        2460, 2129, 2338, 2265, 2461, 2130, 1838, 2131, 2339, 2266, 2462, 
        2132, 2340, 2267, 2463, 2133, 2341, 2268, 2464, 2134, 2342, 2182, 
        2135}], Line3DBox[{2137, 2343, 2183, 2136, 2344, 2269, 2465, 2138, 
        2345, 2270, 2466, 2139, 2346, 2271, 2467, 2140, 2347, 2184, 2141, 
        2348, 1885, 2142, 2349, 2272, 2468, 2143, 2350, 2273, 2469, 2144, 
        2351, 2185, 2145}], 
       Line3DBox[{2147, 2352, 2186, 2146, 2353, 2354, 2187, 2148, 2355, 2274, 
        2470, 2149, 2356, 2275, 2471, 2150, 2357, 2188, 2151, 2358, 2359, 
        2189, 2152, 2360, 1932, 2153, 2361, 2276, 2472, 2154, 2362, 2190, 
        2155}], Line3DBox[{2157, 2363, 2191, 2156, 2364, 2365, 2192, 2158, 
        2366, 2367, 2193, 2159, 2368, 2277, 2473, 2160, 2369, 2194, 2161, 
        2370, 2371, 2195, 2162, 2372, 2373, 2196, 2163, 2374, 1979, 2164, 
        2375, 2197, 2165}]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0DcwpVEAhuEju0IvFiqxUGHdWiyNu1ZnZA0z4mwp1mKjwa5a2hpLLdZi
L3UK+VH887wz35wz/5yC9oGm/rgQwpDvU7wlivgQ0pNCyGcOy1gfCaFYR3UV
G1nHVsZsP3Wv7uIYhznDNtukXtLzXOca/7HPtqUP9T7PecJbXvE5NYQnfa8/
+MrMhBDSkv2rLU9n61IWsZqVTHNvg67VvxhjDzs5yiFOc4KLnONf/nZuVe/o
TR5wj2ecsR3rG33JR97x/fu87UVneLtISgi5zGIJl22F+oeuYD1r2MJmFtq7
dYce4SCnOM5y24Ke1X+4wm1uMGr7r3f1KY94zQs+8AtrHD31
        "]], 
       Line3DBox[CompressedData["
1:eJwN0DdMFFAcx/H/cVJPnYFTAtshMDBRvBkQNxOaI0HKojEqMFNnaTNFZ4rM
NGeaM4pMJAQ4NgZF/Awvn2/yS15eXlXvu1dvExHx3knkRdw9iEjyYX5EBdOs
4zNm2cSXbONrdvG8KGJI9+tRfuI0J3hhW9Cz+iuXucl15mzf9Y7+wUOe8Rdv
bTf6St/zLx8nI1IFHloc8VSX61pW8zkbmbK161bdw04O8g1H+JFTHOc8Z/iF
S/zGNe5xm8c8YKk7f+ufOsdL/uMfpm2P/FlJYcQTlrGGGVbamnWDfsEWdrOD
GduA7tPD/MBJjrHeNqc/6xUucoOrzNp29ZY+4j5PecJr/gf9XjvR
        "]], 
       Line3DBox[CompressedData["
1:eJwV0CdMnlEYhuGX+dOE5RkFyRYoKEWzajCUoRDMBIJg2zKqmZoWqjtAU4Zm
aqYkYSkM40KcXHe+Jyc5+Yq7h1uHkiJixElLjnhNjUgwOy2iiAWsYtOHiHJd
rz/xy/s3drGdg+zjFMf5nbO8yYhY1Uv6F39yi395b9vXO/qUR7zmBZ9sj/pO
J6VEvDCXWekRyd7yUefrSpbxM2uZZWvRjbqTXznAXk5yjPOc4QoXucFp937o
Tf2He/zPEx7yiud84C3Df3pmvns5OjMRUcg8VrCUxbY6XaOb2cAOtrHE1q97
9ARHOcdvrLYt6wW9zjX+42/W23b1tj7mAS95xnu+AUzQOnY=
        "]], 
       Line3DBox[CompressedData["
1:eJwVzjkwnVEcxuE/l2DMuKK3lsYSM7oQauuMyhIKlTVGlcTSEtTW2lpba1tq
a23tXdKokifFmec33ztnzlfaP9bxLS0ixp2c9Ii0zIhc5rOMxaxhS05ElW7U
9Wz//4197LT16FE9xCn+5AJ/cY3L3OEmj7jPVHbEb32qb3nFZz7w3fZHp3Qi
4ec+RBQwyYT3SnWR/sRKNrCOSVubbta97OYIBznJH5znLFe5xG1Ou7ehD/Ue
z3nCG87ZLvWTvucbX5ieEfGXH5mXFVHCQlazgmXufdGfdSub+JVdLLcN6wE9
we+c4wxrbSt6UW9xnQfcZaPtTB/ra17wkXd85T+RYDkv
        "]], 
       Line3DBox[CompressedData["
1:eJwVzjkwnVEcxuH/tSsYWy8XnZkkGKUttUgorRmTKrZR2ltcShNbjURtra21
tbalFxQqj+LM85vvnXPmS/YOtQ0mImLYyUuLSM+MyGcRK5hkDVtyIz7rL7qB
re/f+IPtti49pPs5yTHO86dtVq/qJW5yg/vc4SmPeM0L/uMdX3MiXvR/nZke
kZYVUcJCZnizXH/Q1fzEJtazwPZdf9U97OQg+zjBUc5xhitc5F9Oubeu9/Q2
T3jIK6Zs5/pB3/KZj+//kRGxYEtkRxTrApaxlFX8yEbW8Rub2c0OVro3oH/p
cY4wxWnW2pb1b/2Ha9zlFptsx/pAX/KM97zhE98ASh448g==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzidMnVEcxuE/GxS5UEIQJFyGI6G0BFkoaNbVbMtqgusAzSgaKGimZrSa
qZmaKVBMgelzxZfnd/LmfDnJwbHUaEZEjPsKMyOycyISLGYNK9nAet7mR7Tq
Zp1iBwfYy3vbNz2iJ/mTc5zhg21ZL+pNrvEfd/hoO9YH+pJn6X/xhu+2N/2s
c7MisnIjSljEnIKIap3Un/mRLWxiwtal23U/ezjGYU7wB39zmktc4AZXWeru
X72tj7jPC56yzHanr/Urn9LvyI7IzIsot33QCV3FCn5iXfps+6q/6E62sY/d
rLWN6iH9i985yyk22v7oeb3OFe5yiy22Q72nz3nCW17xhf8Bq0g64Q==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzidMHGAYx+GXfegDmlSQMAoKUUaDZByaVc04NNsyNaPolqGZmqmhFM3U
QK8JqmElCB7El+eX/PMlb1l6uGsoKyLGvWR2RH5eRDGLWc1KfmNHYUSdbtMt
/M5ODrCPmUTEmB7Ws5ziEhf4YFvTy3qHmzziPv/bzvRvfcNL/uM932yv+kkn
ciLy8iM+sYgF7qnSFbqBtUyxmUlbt+7QafZylEOc4SR/cJ6r/MVtzvq3oQ/1
Hv/whNe84Gd7Rt/pFz5+3JEbkVsQUWor0Un9heWs51dW2lp1k+5iO/vZwxrb
iB7U05zgIufYaFvRP/UW13nAXaZsp/pYX/Gcf3nLZ74Dz+87lA==
        "]], 
       Line3DBox[CompressedData["
1:eJwVzjkwnVEcxuG/JdyrF1SZzORaGo3YWmudK3RmrC0JatutrbUgtbVGqK21
tUaSUZmxjRmP4pvnN/OeM9/53DOYHsiKiGFfUXZE4kNECYtYwVLWMZ2MqNat
uokdbGM/O209ekT/ZIbjnOcM7xIRv/Wi3uQa97jDe9uJPtRXPOd/3vLV9qIf
dUFORH6et/EjE/5ZrlO6ll/ZwkYW2tp1Wvexm8P8wUmOcY7TXOYvbjDj3qre
1ds85gEv38/azvQ/fcNnPjCZG5GXH/HJXqwLdRm/sIZVTNmadYP+zm/sZRcr
bUN6UE9wlLOcYr1tSS/oda7wD7fYYjvS+/qCp/zLaz7xDQ/xPFs=
        "]], 
       Line3DBox[CompressedData["
1:eJwVzjkwnlEYhuE3EsuP2pY0aayFyvbXtrSI6MzYK8Zak1BbG02C1ILUSURt
ra21tVNYx6X45rpnnnO+OR87Bpr630TEsO99SkRmasQH5rOMxUyyJRFRpT/p
erbxM3vZbuvSY3qYU/zKBfbZZvVPvcTfXOMW//E2I+JA7+ozHvOGl3y2Pel7
nf02IpHmjcxjwn9LdZGuYSUbWccc2xfdonvYyVEOcZITnOcMV/iDG5xy75f+
r/9ynzs8fT1rO9LX+oKPvGPWu4hFW0Z6RIHOZQkLWc0KFtobdK1uZTO72cFy
24ge1N84zjlOM2lb1t/1Ole5yT9ssO3pbX3CQ17xnA98AWDoPS0=
        "]], 
       Line3DBox[CompressedData["
1:eJwV0CVMhlEAhtGLj2EdHRENJOzPaCKgCTY0ABtORTMaSGhGM5rRjHasY4fw
7Tzbe+8Xbm7HQEN/VAhhyPceG8J9QghPvOQNj3nGSGIIu/pAr3OLC1xmiW1K
z+phjrGTPWzkur1FV+lalrKCeVyzFep0ncUkpvIr3v9tvzEhvOoPPvCZV5yz
3eoTfc49HnKDk7ZtvahXOP1/niMcZxd72cRWVrOOye6V6UqdzyJmMJtRtmSd
pr/jPBbf+BkdwiMH7S/6Wt/xlBfcZ5/tSG/qHS5xlTNst83rUT3B7v/zbGaj
rU3X6HqWM8IC1tiKdabOYQpj+ePtovkHu1c7yg==
        "]], 
       Line3DBox[CompressedData["
1:eJwVyzcwH3AYx+FXZ0Ds6qzOEv6zOlj0xaKeXM5JwaquEuXOpM/qjMSszupO
YieP4XfP573v/Up6PrcMJ0XEiPc3NeImI+KeZ7zkEX8zkRWxo/f1Gjf5k4uc
fL/tM/qr/sFeDrCNq7ZOXacbWc0alnLFVqHzdRGz+YGv6RHztiT9pP+lRNzy
geecsV3pY/2HuzzgOidsW/qXXuIUZ/mNY+zjINvZxXo2Mce/j7pWl7GSBSx+
3zhqz9NvaRHJfOZLcsQdv9ge9YW+5glPucdB26He0Ntc4DKn2WOb09/1OPs5
xA622rp1g27mJyZYzgZblS7UJcxlJoPp/A9GiDuS
        "]], 
       Line3DBox[CompressedData["
1:eJwNyzksHgAYx+HXnYrEtdOP2TmjOjsqtqIkTM4mJEKVlX6M4mpMwldmV2fn
7JxRdkd3z/Dm+SX/vIne7+0jaREx5l4zI+5yIv7xgtc84il3uf0h4kBv6j9c
4ipnmbIl9YSeYj+H2MEN2zfdpFtZx0+s4LqtWpfoBPNZxOCiLUM/Z0e8ZUTc
85GXTNpu9LE+4x4PucUZ27Ze1muc4zwn+ZMDHGYnu9nML6znhN9GXalrWMoy
FnDcVqzTdCZfsiL+p0c8cNT2pK/0LU94zn0O2f7qlN7hCn/zF/tsC/qHnuYg
R9jFr7Ye3aLb2MDPrGKLrVZ/1OUsZB7Tmct3LuY7Rg==
        "]], 
       Line3DBox[CompressedData["
1:eJwNyyVMBQAUhtELDx6jsYd0NKMjohmNDN1oaEYz2tiwl9GMZjSjGe1Y5IS7
823/bvHQeNdYRkRMup+siJeciHfe8ZEXvGZLbsSRPtU73Oc6t1hvW9DLeoqz
HOE4eznANnaygc2sZNpfjS7WZUyxkAmu2ZL6Kxnxm4h45QfvuWR70pf6hsc8
4y7nbQd6Q29zkSuc5hxHOcE+DrKdXUz5a9Qtuoq1LGE5k7Z8XaSzmMPv7Ii/
zIg3fvKBz7ziLU846u9c7+lDbjLNJQ7bVvWMnucYJ9nPHtuQ7tDdbGIrq9lu
q9OluoIFTDGbefwHKJ85tA==
        "]], Line3DBox[CompressedData["
1:eJwVzCVMBVAYhuEfh36RytCMZjSjjQ0d8WIZzWgioIGEZjSjGc1oxxIP4ex5
t2//KewbakumRMSI950e8ZwV8cZbPvCcV2zKiTjUJ3qbe1zhOme5wHFOMckR
dnPLXZ9u0e2sYyMruGGr1kW6lAnmM4PLtmz9mRnxkxbxwnfecc72qC/0NY94
yh3O2Pb1qt7gHBc5wWkOcZQ97GcrO5hwV6+bdCVrWMwy5rKAmczhV0bEb2rE
K8fcfeh7/cRL3vCYSduZ3tUHXOMm5zloW9KTeobD/3+xl122Ad2mO9nAZlax
1VarS3Q585jHLCb4B9UWO2o=
        "]], Line3DBox[CompressedData["
1:eJwVzCdMHWAYhtGPPerpBYdgaqCgKUMzHQmrOOZtkJT2ai7DYJgJCYKpmZpC
q1nVTE8pogfx5zzJm+8v7RtpG86IiDHvNTviLi/ikZe84RkveMBjbnGXS1zl
DDcLIub0lP7OUU6wlxu2Ad2mO9nIZta839s+6TJdySIWM4+LtkL9khvxLyvi
nk+8Ytp2q3/qXzzkCbeZsu3pZb3GNOf5jT84xiT7OMh2dvEzW1jLepazih85
6c8Sna8/8G9OxFtmxAOTtmd9rf/wnL95xBHbqd7R+1zhOmc5ZFvQ0zrFcX5l
P3tsX3SH7mYTW1nHdluDrtDVTLCEBUzwP31wPQw=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
ZPh/ACPWMIU=
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"Node\"", TraditionalForm], 
    FormBox["\"time\"", TraditionalForm], 
    FormBox["\[Rho]", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765713656273912*^9, 3.765713698632176*^9, 
  3.765713743205188*^9, 3.766423011526799*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"95677014-fcf2-4486-81fa-4aa3a13cafcb"]
}, Open  ]]
},
WindowSize->{1366, 829},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3303, 86, 266, "Text",ExpressionUUID->"dfe9fbd6-90b6-4a8d-9fbd-b93ab99296d2"],
Cell[3864, 108, 5159, 154, 179, "Text",ExpressionUUID->"da1376ef-3dc4-48cf-8322-f17561cd45f7"],
Cell[9026, 264, 2475, 62, 185, "Input",ExpressionUUID->"c44b604d-1df8-42e5-be45-7efd94616e00"],
Cell[11504, 328, 1778, 48, 107, "Text",ExpressionUUID->"90471404-008a-4a87-9a11-2227a4cfbe2f"],
Cell[13285, 378, 1756, 51, 75, "Text",ExpressionUUID->"a9db625c-f201-431c-a5fa-bff8fee77759"],
Cell[15044, 431, 342, 7, 39, "Input",ExpressionUUID->"22044a60-023b-43f4-9c31-ea9bbe9aa0bc"],
Cell[CellGroupData[{
Cell[15411, 442, 462, 10, 39, "Input",ExpressionUUID->"46a59d6c-0725-45e8-9079-dc6f6499d1c7"],
Cell[15876, 454, 3752, 88, 293, "Output",ExpressionUUID->"d7817dbe-f3ca-4b97-8fb5-beab9d633c02"]
}, Open  ]],
Cell[19643, 545, 179, 3, 39, "Input",ExpressionUUID->"c006c0d9-07c4-4d34-a2c7-ad239ab1a182"],
Cell[19825, 550, 10126, 259, 707, "Input",ExpressionUUID->"72749f88-ce36-447f-801c-a54657fd878f"],
Cell[CellGroupData[{
Cell[29976, 813, 286, 6, 39, "Input",ExpressionUUID->"34cb5fe9-d1ae-40b4-b097-e5ff10956187"],
Cell[30265, 821, 2238, 42, 354, "Output",ExpressionUUID->"1522a150-d482-4240-a599-c493622fbe36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32540, 868, 337, 6, 39, "Input",ExpressionUUID->"ddb8672e-d739-4cbf-b3b1-ad74b3aae22f"],
Cell[32880, 876, 2990, 91, 132, "Output",ExpressionUUID->"a08ce268-3f12-4355-b0d3-a1289f4341eb"]
}, Open  ]],
Cell[35885, 970, 518, 9, 39, "Input",ExpressionUUID->"a226774a-bda5-4119-b72e-f7ade97f3b81"],
Cell[36406, 981, 330, 7, 45, "Text",ExpressionUUID->"f1d535c0-1b36-4354-8a71-f006c114672d"],
Cell[CellGroupData[{
Cell[36761, 992, 505, 9, 39, "Input",ExpressionUUID->"fe7c6d34-5664-41d0-8ab6-1f3be523aca1"],
Cell[37269, 1003, 957, 15, 74, "Output",ExpressionUUID->"10687798-84ab-4691-8665-cc0ef05a9cbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38263, 1023, 439, 8, 39, "Input",ExpressionUUID->"73fa5f78-4fd1-4792-a88e-763700c86a73"],
Cell[38705, 1033, 1917, 48, 313, "Output",ExpressionUUID->"05f327c0-86d0-470c-8116-a2e82dc1fbea"]
}, Open  ]],
Cell[40637, 1084, 239, 4, 45, "Text",ExpressionUUID->"0feabede-4c87-4bc9-876d-6c963e80d05e"],
Cell[CellGroupData[{
Cell[40901, 1092, 340, 7, 39, "Input",ExpressionUUID->"f41ef0ad-48c0-4047-a169-7c091c2c0c8f"],
Cell[41244, 1101, 1735, 45, 308, "Output",ExpressionUUID->"2c798fde-e04a-47cb-a6be-eb9ae94c2575"]
}, Open  ]],
Cell[42994, 1149, 180, 3, 45, "Text",ExpressionUUID->"42f1ec25-f301-4838-aa40-4958141c6a8a"],
Cell[CellGroupData[{
Cell[43199, 1156, 209, 3, 39, "Input",ExpressionUUID->"e619b74e-ce3b-4200-b98c-e4a167483179"],
Cell[43411, 1161, 814, 13, 74, "Output",ExpressionUUID->"0d514066-f8c9-4058-80e1-49c5ed30bf1e"]
}, Open  ]],
Cell[44240, 1177, 244, 4, 45, "Text",ExpressionUUID->"64855dba-b70b-4494-8511-81d7105c2644"],
Cell[CellGroupData[{
Cell[44509, 1185, 426, 11, 39, "Input",ExpressionUUID->"6cfa9570-b267-41c5-b909-5711e6c7a3b1"],
Cell[44938, 1198, 1771, 44, 305, "Output",ExpressionUUID->"fa5ea6a3-ebf1-497b-a21a-787cba6d4387"]
}, Open  ]],
Cell[46724, 1245, 177, 3, 45, "Text",ExpressionUUID->"c5d73fbb-fe10-47e8-b81f-3e15de892c7b"],
Cell[CellGroupData[{
Cell[46926, 1252, 564, 14, 39, "Input",ExpressionUUID->"c6c7247e-b528-454d-b09d-c9a6b21aece9"],
Cell[47493, 1268, 123178, 2053, 379, "Output",ExpressionUUID->"95677014-fcf2-4486-81fa-4aa3a13cafcb"]
}, Open  ]]
}
]
*)

